# Security Headers Configuration for QASD
# Comprehensive security headers for production deployment

# Content Security Policy (CSP)
# Prevents XSS attacks by controlling resource loading
add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://www.googletagmanager.com https://cdn.jsdelivr.net;
    style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdn.jsdelivr.net;
    font-src 'self' https://fonts.gstatic.com https://cdn.jsdelivr.net;
    img-src 'self' data: https: blob:;
    media-src 'self' data: blob:;
    object-src 'none';
    frame-src 'self' https://www.youtube.com https://player.vimeo.com;
    worker-src 'self' blob:;
    child-src 'self' blob:;
    form-action 'self';
    base-uri 'self';
    manifest-src 'self';
    connect-src 'self' https://api.qasd.com wss://api.qasd.com https://www.google-analytics.com;
    upgrade-insecure-requests;
" always;

# X-Content-Type-Options
# Prevents MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# X-Frame-Options
# Prevents clickjacking attacks
add_header X-Frame-Options "DENY" always;

# X-XSS-Protection
# Enables XSS filtering in browsers
add_header X-XSS-Protection "1; mode=block" always;

# Referrer Policy
# Controls referrer information sent with requests
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Permissions Policy (Feature Policy)
# Controls browser features and APIs
add_header Permissions-Policy "
    accelerometer=(),
    ambient-light-sensor=(),
    autoplay=(self),
    battery=(),
    camera=(),
    cross-origin-isolated=(),
    display-capture=(),
    document-domain=(),
    encrypted-media=(),
    execution-while-not-rendered=(),
    execution-while-out-of-viewport=(),
    fullscreen=(self),
    geolocation=(),
    gyroscope=(),
    keyboard-map=(),
    magnetometer=(),
    microphone=(),
    midi=(),
    navigation-override=(),
    payment=(),
    picture-in-picture=(),
    publickey-credentials-get=(),
    screen-wake-lock=(),
    sync-xhr=(),
    usb=(),
    web-share=(),
    xr-spatial-tracking=()
" always;

# Cross-Origin Embedder Policy
# Enables cross-origin isolation
add_header Cross-Origin-Embedder-Policy "require-corp" always;

# Cross-Origin Opener Policy
# Prevents cross-origin attacks
add_header Cross-Origin-Opener-Policy "same-origin" always;

# Cross-Origin Resource Policy
# Controls cross-origin resource sharing
add_header Cross-Origin-Resource-Policy "same-origin" always;

# Expect-CT
# Certificate Transparency monitoring
add_header Expect-CT "max-age=86400, enforce" always;

# X-Permitted-Cross-Domain-Policies
# Controls cross-domain policy files
add_header X-Permitted-Cross-Domain-Policies "none" always;

# Clear-Site-Data (for logout endpoints)
# Uncomment for logout endpoints
# add_header Clear-Site-Data "cache, cookies, storage, executionContexts" always;

# Cache Control for sensitive pages
# Prevents caching of sensitive content
set $no_cache_headers "no-cache, no-store, must-revalidate, private";
set $cache_control_sensitive "no-cache, no-store, must-revalidate, max-age=0";

# Security headers for API endpoints
location /api/ {
    # Additional security for API
    add_header X-API-Version "1.0" always;
    add_header X-Rate-Limit-Remaining $limit_req_remaining always;
    
    # Prevent caching of API responses with sensitive data
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
}

# Security headers for authentication endpoints
location ~ ^/api/(auth|login|logout|register|password) {
    # Strict security for auth endpoints
    add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    add_header Clear-Site-Data "cache" always;
}

# Security headers for file uploads
location /uploads/ {
    # Prevent execution of uploaded files
    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "default-src 'none'; img-src 'self'; media-src 'self'; object-src 'none';" always;
}

# Remove server information
more_clear_headers 'Server';
more_clear_headers 'X-Powered-By';
more_clear_headers 'X-AspNet-Version';
more_clear_headers 'X-AspNetMvc-Version';

# Custom security headers for QASD
add_header X-QASD-Version "1.0.0" always;
add_header X-Security-Policy "strict" always;
add_header X-Content-Security "enabled" always;

# HSTS for subdomains (if applicable)
# add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

# Public Key Pinning (HPKP) - Use with caution
# add_header Public-Key-Pins 'pin-sha256="base64+primary=="; pin-sha256="base64+backup=="; max-age=5184000; includeSubDomains' always;

# Report-To header for security reporting
add_header Report-To '{
    "group": "default",
    "max_age": 31536000,
    "endpoints": [{
        "url": "https://api.qasd.com/security-reports"
    }]
}' always;

# Network Error Logging
add_header NEL '{
    "report_to": "default",
    "max_age": 31536000,
    "include_subdomains": true
}' always;