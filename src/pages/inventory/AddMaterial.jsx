import React from 'react';
import { Card } from '../../components/common';
import UniversalForm from '../../components/ui/UniversalForm';
import useUnifiedDataStore from '../../hooks/useUnifiedDataStore';
import { MATERIAL_CATEGORIES, UNITS } from '../../constants';
import { validators } from '../../utils';

const AddMaterial = ({ onMaterialAdded, editingMaterial }) => {
  const { add, update, showNotification } = useUnifiedDataStore();

  const generateMaterialCode = () => {
    // Material code will be generated by the store
    return '';
  };

  const formFields = [
    {
      name: 'code',
      label: 'كود المادة',
      type: 'text',
      placeholder: 'سيتم إنشاؤه تلقائياً',
      disabled: true,
      value: generateMaterialCode()
    },
    {
      name: 'name',
      label: 'اسم المادة',
      type: 'text',
      required: true,
      placeholder: 'أدخل اسم المادة'
    },
    {
      name: 'category',
      label: 'الفئة',
      type: 'select',
      required: true,
      options: MATERIAL_CATEGORIES
    },
    {
      name: 'unit',
      label: 'الوحدة',
      type: 'select',
      required: true,
      options: UNITS.map(unit => ({ value: unit, label: unit }))
    },
    {
      name: 'cost',
      label: 'التكلفة',
      type: 'number',
      step: '0.01',
      placeholder: '0.00'
    },
    {
      name: 'supplier',
      label: 'المورد',
      type: 'text',
      placeholder: 'اسم المورد'
    },
    {
      name: 'notes',
      label: 'ملاحظات',
      type: 'textarea',
      placeholder: 'ملاحظات إضافية'
    }
  ];

  const handleSubmit = async formData => {
    try {
      if (editingMaterial) {
        await update('materials', editingMaterial.id, {
          ...editingMaterial,
          ...formData,
          updatedAt: new Date().toISOString()
        });
        showNotification('تم تحديث المادة بنجاح', 'success');
      } else {
        const newMaterial = {
          id: Date.now().toString(),
          ...formData,
          code: `MAT-${Date.now()}`,
          createdAt: new Date().toISOString(),
          updatedAt: new Date().toISOString()
        };
        await add('materials', newMaterial);
        showNotification('تم إضافة المادة بنجاح', 'success');
      }
      if (onMaterialAdded) {
        onMaterialAdded();
      }
    } catch (error) {
      showNotification('حدث خطأ أثناء حفظ المادة', 'error');
    }
  };

  return (
    <Card>
      <UniversalForm
        fields={formFields}
        onSubmit={handleSubmit}
        initialData={editingMaterial}
        submitLabel={editingMaterial ? 'تحديث المادة' : 'إضافة المادة'}
        validators={{
          name: validators.required,
          category: validators.required,
          unit: validators.required
        }}
      />
    </Card>
  );
};

export default AddMaterial;
